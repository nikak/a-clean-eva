#=====================================
#spring.flyway.enabled=true
#=====================================flyway
#https://levelup.gitconnected.com/a-suggestion-on-managing-data-changes-in-spring-boot-using-flyway-b87cf87f8e88
# https://reflectoring.io/database-migration-spring-boot-flyway/
# https://docs.spring.io/spring-boot/docs/current/reference/html/appendix-application-properties.html
spring.flyway.create-schemas=true
# Automatically call baseline when migrate is executed against a non-empty schema with no metadata table. This schema will then be baselined with the baselineVersion before executing the migrations. Only migrations above baselineVersion will then be applied. If schema is non-empty and user didn't call flyway baseline explicitly, call it implicitly now
spring.flyway.baseline-on-migrate=true
spring.flyway.user=${DB_USER}
spring.flyway.password=${DB_PASSWORD}
spring.flyway.url=${DB_URL}
# if you have multiple schemas, e.g.: spring.flyway.schemas=schema1,schema2
spring.flyway.schemas=schema1
spring.flyway.sql-migration-prefix=V
spring.flyway.repeatable-sql-migration-prefix=R
spring.flyway.sql-migration-separator=__
spring.flyway.sql-migration-suffixes=.sql
spring.flyway.table=flyway_schema_history
#=====================================
spring.flyway.locations=classpath:db/migrations/{vendor}/schema, classpath:db/migrations/{vendor}/data/production
spring.flyway.baselineVersion=1.1
spring.flyway.baselineDescription=initial_shemas_baseline
#=====================================
#in application-initDataEnabled.properties when active-profile is dev and we need preloaded data
#spring.flyway.locations=classpath:db/migrations/{vendor}/schema, classpath:db/migrations/{vendor}/data/dev
#=====================================spring.flyway.placeholders.*
#https://reflectoring.io/database-migration-spring-boot-flyway/
#spring.flyway.placeholder-prefix=${
#spring.flyway.placeholder-replacement=true
#spring.flyway.placeholder-suffix=}
#CREATE TABLE ${schema_name}.test_user(...)
#spring.flyway.placeholders.schema_name=test
#=====================================
# >>>>>> run to empty entire db
# ./mvnw -Dflyway.user=postgres -Dflyway.password=postgres -Dflyway.url=jdbc:postgresql://localhost:5433/zulassung_database flyway:clean
# >>>>>> run baseline if the flyway_history table haven't been created yet
# >>>>>> creates the flyway_schema_history table with the entry of type baseline
# >>>>>> without any cahnges to db. All following/higher migrations will be executed then we run app.
# flyway -baselineVersion="1.2" -baselineDescription="initial_data" baseline
# mvn exec:exec -Dexec.executable="maven" [-Dexec.workingdir="/tmp"] -Dexec.args="-X myproject:dist"
# ./mvnw -Dflyway.user=postgres -Dflyway.password=postgres -Dflyway.url=jdbc:postgresql://localhost:5433/zulassung_database flyway:baseline -Dflyway.baselineVersion="1.2" -Dflyway.baselineDescription="initial_data"
#=====================================