#=====================================
# jpa properties for script generation
# spring.jpa.properties.javax.persistence.schema-generation
#=====================================
# create | drop | drop-and-create | none
script_action=drop-and-create
spring.jpa.properties.javax.persistence.schema-generation.scripts.action=${script_action}
#=====================================
autogen_directory=target/autogen_ddl
spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=${autogen_directory}/create.sql
spring.jpa.properties.javax.persistence.schema-generation.scripts.drop-target=${autogen_directory}/drop.sql
spring.jpa.properties.javax.persistence.schema-generation.scripts.drop-and-create-target=${autogen_directory}/drop-and-create.sql
#=====================================
spring.jpa.properties.javax.persistence.schema-generation.create-source=metadata
spring.jpa.properties.javax.persistence.schema-generation.drop-source=metadata
#=====================================
spring.jpa.properties.javax.persistence.schema-generation.create-database-schemas=true
#=====================================
#=====================================
# enable ddl script generation
#=====================================
#spring.jpa.generate-ddl=true
#=====================================!!!!to stop -- none!!!!
# validate | update | ------ | create-drop | none
#spring.jpa.hibernate.ddl-auto=${acleaneva.autoGenerateDdlAction}
#=====================================
# validate | update | create | create-drop
#spring.jpa.hibernate.hbm2ddl.auto=create-drop
#=====================================
# spring.jpa.defer-datasource-initialization=true
#=====================================
#=====================================
# sql init options if we need to run scripts
# defaults: schema.sql and data.sql
#=====================================
#spring.sql.init.mode=always
#spring.sql.init.schema-locations=${autogen_directory}/drop-and-create.sql
#spring.sql.init.data-locations=${autogen_directory}/data.sql